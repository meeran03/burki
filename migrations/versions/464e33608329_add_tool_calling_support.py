"""add_tool_calling_support

Revision ID: 464e33608329
Revises: 37832f2fb727
Create Date: 2025-08-24 13:17:45.047638

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '464e33608329'
down_revision: Union[str, None] = '37832f2fb727'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('tool_type', sa.String(length=50), nullable=False),
    sa.Column('configuration', sa.JSON(), nullable=False),
    sa.Column('function_definition', sa.JSON(), nullable=False),
    sa.Column('timeout_seconds', sa.Integer(), nullable=False),
    sa.Column('retry_attempts', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('execution_count', sa.Integer(), nullable=False),
    sa.Column('last_executed_at', sa.DateTime(), nullable=True),
    sa.Column('success_count', sa.Integer(), nullable=False),
    sa.Column('failure_count', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('parent_tool_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['parent_tool_id'], ['tools.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tool_org_name', 'tools', ['organization_id', 'name'], unique=True)
    op.create_index(op.f('ix_tools_organization_id'), 'tools', ['organization_id'], unique=False)
    op.create_index(op.f('ix_tools_tool_type'), 'tools', ['tool_type'], unique=False)
    op.create_index(op.f('ix_tools_user_id'), 'tools', ['user_id'], unique=False)
    op.create_table('assistant_tools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assistant_id', sa.Integer(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('custom_configuration', sa.JSON(), nullable=True),
    sa.Column('assigned_by_user_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=False),
    sa.Column('execution_count', sa.Integer(), nullable=False),
    sa.Column('last_executed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['assistant_id'], ['assistants.id'], ),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_assistant_tool', 'assistant_tools', ['assistant_id', 'tool_id'], unique=True)
    op.create_index(op.f('ix_assistant_tools_assistant_id'), 'assistant_tools', ['assistant_id'], unique=False)
    op.create_index(op.f('ix_assistant_tools_tool_id'), 'assistant_tools', ['tool_id'], unique=False)
    op.create_table('tool_execution_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('assistant_id', sa.Integer(), nullable=True),
    sa.Column('call_id', sa.Integer(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('execution_context', sa.JSON(), nullable=True),
    sa.Column('provider_response', sa.JSON(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assistant_id'], ['assistants.id'], ),
    sa.ForeignKeyConstraint(['call_id'], ['calls.id'], ),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tool_execution_logs_assistant_id'), 'tool_execution_logs', ['assistant_id'], unique=False)
    op.create_index(op.f('ix_tool_execution_logs_call_id'), 'tool_execution_logs', ['call_id'], unique=False)
    op.create_index(op.f('ix_tool_execution_logs_status'), 'tool_execution_logs', ['status'], unique=False)
    op.create_index(op.f('ix_tool_execution_logs_tool_id'), 'tool_execution_logs', ['tool_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tool_execution_logs_tool_id'), table_name='tool_execution_logs')
    op.drop_index(op.f('ix_tool_execution_logs_status'), table_name='tool_execution_logs')
    op.drop_index(op.f('ix_tool_execution_logs_call_id'), table_name='tool_execution_logs')
    op.drop_index(op.f('ix_tool_execution_logs_assistant_id'), table_name='tool_execution_logs')
    op.drop_table('tool_execution_logs')
    op.drop_index(op.f('ix_assistant_tools_tool_id'), table_name='assistant_tools')
    op.drop_index(op.f('ix_assistant_tools_assistant_id'), table_name='assistant_tools')
    op.drop_index('idx_assistant_tool', table_name='assistant_tools')
    op.drop_table('assistant_tools')
    op.drop_index(op.f('ix_tools_user_id'), table_name='tools')
    op.drop_index(op.f('ix_tools_tool_type'), table_name='tools')
    op.drop_index(op.f('ix_tools_organization_id'), table_name='tools')
    op.drop_index('idx_tool_org_name', table_name='tools')
    op.drop_table('tools')
    # ### end Alembic commands ###
