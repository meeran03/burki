"""removed unncessary knowledge base fields

Revision ID: 45d759ed5c5b
Revises: 4c1a8ea0f760
Create Date: 2025-05-31 11:47:47.150202

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import Vector

# revision identifiers, used by Alembic.
revision: str = '45d759ed5c5b'
down_revision: Union[str, None] = '4c1a8ea0f760'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_vector_store_assistant_id', table_name='vector_store')
    op.drop_index('ix_vector_store_chunk_id', table_name='vector_store')
    op.drop_index('ix_vector_store_document_id', table_name='vector_store')
    op.drop_table('vector_store')
    op.add_column('document_chunks', sa.Column('embedding', Vector(dim=1536), nullable=True))
    op.drop_index('idx_chunk_content_hash', table_name='document_chunks')
    op.drop_index('ix_document_chunks_content_hash', table_name='document_chunks')
    op.drop_column('document_chunks', 'end_char')
    op.drop_column('document_chunks', 'start_char')
    op.drop_column('document_chunks', 'content_hash')
    op.drop_column('document_chunks', 'embedding_dimension')
    op.drop_column('document_chunks', 'embedding_status')
    op.drop_column('document_chunks', 'embedding_error')
    op.drop_column('document_chunks', 'embedding_model')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('document_chunks', sa.Column('embedding_model', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('document_chunks', sa.Column('embedding_error', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('document_chunks', sa.Column('embedding_status', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('document_chunks', sa.Column('embedding_dimension', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('document_chunks', sa.Column('content_hash', sa.VARCHAR(length=64), autoincrement=False, nullable=False))
    op.add_column('document_chunks', sa.Column('start_char', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('document_chunks', sa.Column('end_char', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_index('ix_document_chunks_content_hash', 'document_chunks', ['content_hash'], unique=False)
    op.create_index('idx_chunk_content_hash', 'document_chunks', ['content_hash'], unique=False)
    op.drop_column('document_chunks', 'embedding')
    op.create_table('vector_store',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('chunk_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('assistant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('embedding_vector', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('embedding_model', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('embedding_dimension', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content_preview', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['assistant_id'], ['assistants.id'], name='vector_store_assistant_id_fkey'),
    sa.ForeignKeyConstraint(['chunk_id'], ['document_chunks.id'], name='vector_store_chunk_id_fkey'),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name='vector_store_document_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='vector_store_pkey')
    )
    op.create_index('ix_vector_store_document_id', 'vector_store', ['document_id'], unique=False)
    op.create_index('ix_vector_store_chunk_id', 'vector_store', ['chunk_id'], unique=True)
    op.create_index('ix_vector_store_assistant_id', 'vector_store', ['assistant_id'], unique=False)
    # ### end Alembic commands ###
